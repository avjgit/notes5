todo:
    for each step - List the Activity lifecycle methods that have been invoked
    on ActivityOne and on ActivityTwo, in the order they occurred.

b) Suppose the user starts the application, which brings up ActivityOne. Next, suppose the user
presses the Button to start ActivityTwo, and that ActivityTwo then appears on the screen.

    a1 onCreate()
    a1 onStart()
    a1 onResume()

    a1 onPause()
    a1 onStop()

    a2 onCreate()
    a2 onStart()
    a2 onResume()

c) Next, suppose the user navigates back to ActivityOne by pressing the “Close Activity”
Button of ActivityTwo. ActivityTwo closes and then ActivityOne reappears. Starting where
you left off after the previous step:

    a2 onPause()
    a2 onStop()

    a1 onRestart()
    a1 onStart()
    a1 onResume()

d) Next, the user presses the Button to start ActivityTwo again. Once ActivityTwo appears, the
user presses the Home Key on the device. Starting where you left off after the previous step:

    a1 onPause()
    a1 onStop()

    a2 onRestart()
    a2 onStart()
    a2 onResume()

    a2 onPause()
    a2 onStop()


e) Next, the user starts the application again, by clicking on its icon in the Launcher. Once the
application has restarted, and starting where you left off after the previous step:

    a2 onRestart()
    a2 onStart()
    a2 onResume()

a) Implement steps a through c described below for both ActivityOne (in ActivityOne.java),
and for ActivityTwo (in ActivityTwo.java). Implement step d for ActivityOne and step e for
ActivityTwo.
    done    a. Create four counter variables, each one corresponding to a different one of the
            lifecycle callback methods being monitored - onCreate(), onRestart(), onStart() and
            onResume().
    done    Increment these variables when their corresponding lifecycle methods get called.

    done    b. Create four TextView variables, each of which will display the value of a different
            counter variable. If you open layout.xml file in the res/layout directory and examine
            each <textview> element, you will see its id. The TextView variables should be
            accessible in all methods, but they should be initially assigned within onCreate().

    done    c. Override all the lifecycle callback methods. In each of these methods place a call to
            the Log.i() method, to output a string with the following format: “Entered the XXX
            method”, where XXX is replaced with the name of the method being invoked. For
            example, “Entered the onCreate() method". Update the appropriate invocation
            counter and call the displayCounts() method to update the user interface.

    done    d. Implement the OnClickListener for the launchActivityTwoButton. (for ActivityOne.java only)

    repeate a-d for a2

    e. Implement the OnClickListener for the closeButton. (for ActivityTwo.java only)
    closeButton.setOnClickListener(new OnClickListener() {
    public void onClick(View v) {
    // This function closes ActivityTwo
    // Hint: use Context’s finish() method
    …
    }
    }